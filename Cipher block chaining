#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/des.h>

void encryptCBC_3DES(const unsigned char *input, unsigned char *output, size_t length, const unsigned char *key, const unsigned char *iv) {
    DES_cblock key1, key2, key3, ivBlock;
    DES_key_schedule ks1, ks2, ks3;
    
    memcpy(key1, key, 8);
    memcpy(key2, key + 8, 8);
    memcpy(key3, key + 16, 8);
    
    DES_set_key(&key1, &ks1);
    DES_set_key(&key2, &ks2);
    DES_set_key(&key3, &ks3);

    memcpy(ivBlock, iv, 8);

    for (size_t i = 0; i < length; i += 8) {
        unsigned char block[8];
        memcpy(block, input + i, 8);

        for (int j = 0; j < 8; j++) {
            block[j] ^= ivBlock[j];
        }

        DES_ecb3_encrypt((DES_cblock *)block, (DES_cblock *)output + i, &ks1, &ks2, &ks3, DES_ENCRYPT);
        memcpy(ivBlock, output + i, 8);
    }
}

int main() {
    unsigned char key[24] = "123456789012345678901234";
    unsigned char iv[8] = "initvect";

    const char *plaintext = "This is a test message.";
    size_t plaintextLength = strlen(plaintext);

    size_t ciphertextLength = (plaintextLength / 8 + 1) * 8;
    unsigned char *ciphertext = malloc(ciphertextLength);

    encryptCBC_3DES((const unsigned char *)plaintext, ciphertext, plaintextLength, key, iv);

    printf("Plaintext: %s\n", plaintext);
    printf("Ciphertext: ");
    for (size_t i = 0; i < ciphertextLength; i++) {
        printf("%02X", ciphertext[i]);
    }
    printf("\n");

    free(ciphertext);

    return 0;
